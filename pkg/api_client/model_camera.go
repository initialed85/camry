/*
Djangolang

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_client

import (
	"encoding/json"
	"time"
)

// checks if the Camera type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Camera{}

// Camera struct for Camera
type Camera struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	Id *string `json:"id,omitempty"`
	LastSeen *time.Time `json:"last_seen,omitempty"`
	Name *string `json:"name,omitempty"`
	ReferencedByDetectionCameraIdObjects []Detection `json:"referenced_by_detection_camera_id_objects,omitempty"`
	ReferencedByVideoCameraIdObjects []Video `json:"referenced_by_video_camera_id_objects,omitempty"`
	SegmentProducerClaimedUntil *time.Time `json:"segment_producer_claimed_until,omitempty"`
	StreamProducerClaimedUntil *time.Time `json:"stream_producer_claimed_until,omitempty"`
	StreamUrl *string `json:"stream_url,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewCamera instantiates a new Camera object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCamera() *Camera {
	this := Camera{}
	return &this
}

// NewCameraWithDefaults instantiates a new Camera object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCameraWithDefaults() *Camera {
	this := Camera{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Camera) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Camera) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Camera) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Camera) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *Camera) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Camera) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *Camera) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *Camera) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Camera) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Camera) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Camera) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Camera) SetId(v string) {
	o.Id = &v
}

// GetLastSeen returns the LastSeen field value if set, zero value otherwise.
func (o *Camera) GetLastSeen() time.Time {
	if o == nil || IsNil(o.LastSeen) {
		var ret time.Time
		return ret
	}
	return *o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Camera) GetLastSeenOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSeen) {
		return nil, false
	}
	return o.LastSeen, true
}

// HasLastSeen returns a boolean if a field has been set.
func (o *Camera) HasLastSeen() bool {
	if o != nil && !IsNil(o.LastSeen) {
		return true
	}

	return false
}

// SetLastSeen gets a reference to the given time.Time and assigns it to the LastSeen field.
func (o *Camera) SetLastSeen(v time.Time) {
	o.LastSeen = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Camera) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Camera) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Camera) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Camera) SetName(v string) {
	o.Name = &v
}

// GetReferencedByDetectionCameraIdObjects returns the ReferencedByDetectionCameraIdObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Camera) GetReferencedByDetectionCameraIdObjects() []Detection {
	if o == nil {
		var ret []Detection
		return ret
	}
	return o.ReferencedByDetectionCameraIdObjects
}

// GetReferencedByDetectionCameraIdObjectsOk returns a tuple with the ReferencedByDetectionCameraIdObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Camera) GetReferencedByDetectionCameraIdObjectsOk() ([]Detection, bool) {
	if o == nil || IsNil(o.ReferencedByDetectionCameraIdObjects) {
		return nil, false
	}
	return o.ReferencedByDetectionCameraIdObjects, true
}

// HasReferencedByDetectionCameraIdObjects returns a boolean if a field has been set.
func (o *Camera) HasReferencedByDetectionCameraIdObjects() bool {
	if o != nil && !IsNil(o.ReferencedByDetectionCameraIdObjects) {
		return true
	}

	return false
}

// SetReferencedByDetectionCameraIdObjects gets a reference to the given []Detection and assigns it to the ReferencedByDetectionCameraIdObjects field.
func (o *Camera) SetReferencedByDetectionCameraIdObjects(v []Detection) {
	o.ReferencedByDetectionCameraIdObjects = v
}

// GetReferencedByVideoCameraIdObjects returns the ReferencedByVideoCameraIdObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Camera) GetReferencedByVideoCameraIdObjects() []Video {
	if o == nil {
		var ret []Video
		return ret
	}
	return o.ReferencedByVideoCameraIdObjects
}

// GetReferencedByVideoCameraIdObjectsOk returns a tuple with the ReferencedByVideoCameraIdObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Camera) GetReferencedByVideoCameraIdObjectsOk() ([]Video, bool) {
	if o == nil || IsNil(o.ReferencedByVideoCameraIdObjects) {
		return nil, false
	}
	return o.ReferencedByVideoCameraIdObjects, true
}

// HasReferencedByVideoCameraIdObjects returns a boolean if a field has been set.
func (o *Camera) HasReferencedByVideoCameraIdObjects() bool {
	if o != nil && !IsNil(o.ReferencedByVideoCameraIdObjects) {
		return true
	}

	return false
}

// SetReferencedByVideoCameraIdObjects gets a reference to the given []Video and assigns it to the ReferencedByVideoCameraIdObjects field.
func (o *Camera) SetReferencedByVideoCameraIdObjects(v []Video) {
	o.ReferencedByVideoCameraIdObjects = v
}

// GetSegmentProducerClaimedUntil returns the SegmentProducerClaimedUntil field value if set, zero value otherwise.
func (o *Camera) GetSegmentProducerClaimedUntil() time.Time {
	if o == nil || IsNil(o.SegmentProducerClaimedUntil) {
		var ret time.Time
		return ret
	}
	return *o.SegmentProducerClaimedUntil
}

// GetSegmentProducerClaimedUntilOk returns a tuple with the SegmentProducerClaimedUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Camera) GetSegmentProducerClaimedUntilOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SegmentProducerClaimedUntil) {
		return nil, false
	}
	return o.SegmentProducerClaimedUntil, true
}

// HasSegmentProducerClaimedUntil returns a boolean if a field has been set.
func (o *Camera) HasSegmentProducerClaimedUntil() bool {
	if o != nil && !IsNil(o.SegmentProducerClaimedUntil) {
		return true
	}

	return false
}

// SetSegmentProducerClaimedUntil gets a reference to the given time.Time and assigns it to the SegmentProducerClaimedUntil field.
func (o *Camera) SetSegmentProducerClaimedUntil(v time.Time) {
	o.SegmentProducerClaimedUntil = &v
}

// GetStreamProducerClaimedUntil returns the StreamProducerClaimedUntil field value if set, zero value otherwise.
func (o *Camera) GetStreamProducerClaimedUntil() time.Time {
	if o == nil || IsNil(o.StreamProducerClaimedUntil) {
		var ret time.Time
		return ret
	}
	return *o.StreamProducerClaimedUntil
}

// GetStreamProducerClaimedUntilOk returns a tuple with the StreamProducerClaimedUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Camera) GetStreamProducerClaimedUntilOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StreamProducerClaimedUntil) {
		return nil, false
	}
	return o.StreamProducerClaimedUntil, true
}

// HasStreamProducerClaimedUntil returns a boolean if a field has been set.
func (o *Camera) HasStreamProducerClaimedUntil() bool {
	if o != nil && !IsNil(o.StreamProducerClaimedUntil) {
		return true
	}

	return false
}

// SetStreamProducerClaimedUntil gets a reference to the given time.Time and assigns it to the StreamProducerClaimedUntil field.
func (o *Camera) SetStreamProducerClaimedUntil(v time.Time) {
	o.StreamProducerClaimedUntil = &v
}

// GetStreamUrl returns the StreamUrl field value if set, zero value otherwise.
func (o *Camera) GetStreamUrl() string {
	if o == nil || IsNil(o.StreamUrl) {
		var ret string
		return ret
	}
	return *o.StreamUrl
}

// GetStreamUrlOk returns a tuple with the StreamUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Camera) GetStreamUrlOk() (*string, bool) {
	if o == nil || IsNil(o.StreamUrl) {
		return nil, false
	}
	return o.StreamUrl, true
}

// HasStreamUrl returns a boolean if a field has been set.
func (o *Camera) HasStreamUrl() bool {
	if o != nil && !IsNil(o.StreamUrl) {
		return true
	}

	return false
}

// SetStreamUrl gets a reference to the given string and assigns it to the StreamUrl field.
func (o *Camera) SetStreamUrl(v string) {
	o.StreamUrl = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Camera) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Camera) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Camera) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Camera) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o Camera) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Camera) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastSeen) {
		toSerialize["last_seen"] = o.LastSeen
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.ReferencedByDetectionCameraIdObjects != nil {
		toSerialize["referenced_by_detection_camera_id_objects"] = o.ReferencedByDetectionCameraIdObjects
	}
	if o.ReferencedByVideoCameraIdObjects != nil {
		toSerialize["referenced_by_video_camera_id_objects"] = o.ReferencedByVideoCameraIdObjects
	}
	if !IsNil(o.SegmentProducerClaimedUntil) {
		toSerialize["segment_producer_claimed_until"] = o.SegmentProducerClaimedUntil
	}
	if !IsNil(o.StreamProducerClaimedUntil) {
		toSerialize["stream_producer_claimed_until"] = o.StreamProducerClaimedUntil
	}
	if !IsNil(o.StreamUrl) {
		toSerialize["stream_url"] = o.StreamUrl
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableCamera struct {
	value *Camera
	isSet bool
}

func (v NullableCamera) Get() *Camera {
	return v.value
}

func (v *NullableCamera) Set(val *Camera) {
	v.value = val
	v.isSet = true
}

func (v NullableCamera) IsSet() bool {
	return v.isSet
}

func (v *NullableCamera) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCamera(val *Camera) *NullableCamera {
	return &NullableCamera{value: val, isSet: true}
}

func (v NullableCamera) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCamera) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


