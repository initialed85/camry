/*
Djangolang

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_client

import (
	"encoding/json"
)

// checks if the ArrayOfVec2Inner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArrayOfVec2Inner{}

// ArrayOfVec2Inner struct for ArrayOfVec2Inner
type ArrayOfVec2Inner struct {
	X *float64 `json:"X,omitempty"`
	Y *float64 `json:"Y,omitempty"`
}

// NewArrayOfVec2Inner instantiates a new ArrayOfVec2Inner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArrayOfVec2Inner() *ArrayOfVec2Inner {
	this := ArrayOfVec2Inner{}
	return &this
}

// NewArrayOfVec2InnerWithDefaults instantiates a new ArrayOfVec2Inner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArrayOfVec2InnerWithDefaults() *ArrayOfVec2Inner {
	this := ArrayOfVec2Inner{}
	return &this
}

// GetX returns the X field value if set, zero value otherwise.
func (o *ArrayOfVec2Inner) GetX() float64 {
	if o == nil || IsNil(o.X) {
		var ret float64
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArrayOfVec2Inner) GetXOk() (*float64, bool) {
	if o == nil || IsNil(o.X) {
		return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *ArrayOfVec2Inner) HasX() bool {
	if o != nil && !IsNil(o.X) {
		return true
	}

	return false
}

// SetX gets a reference to the given float64 and assigns it to the X field.
func (o *ArrayOfVec2Inner) SetX(v float64) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *ArrayOfVec2Inner) GetY() float64 {
	if o == nil || IsNil(o.Y) {
		var ret float64
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArrayOfVec2Inner) GetYOk() (*float64, bool) {
	if o == nil || IsNil(o.Y) {
		return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *ArrayOfVec2Inner) HasY() bool {
	if o != nil && !IsNil(o.Y) {
		return true
	}

	return false
}

// SetY gets a reference to the given float64 and assigns it to the Y field.
func (o *ArrayOfVec2Inner) SetY(v float64) {
	o.Y = &v
}

func (o ArrayOfVec2Inner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArrayOfVec2Inner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.X) {
		toSerialize["X"] = o.X
	}
	if !IsNil(o.Y) {
		toSerialize["Y"] = o.Y
	}
	return toSerialize, nil
}

type NullableArrayOfVec2Inner struct {
	value *ArrayOfVec2Inner
	isSet bool
}

func (v NullableArrayOfVec2Inner) Get() *ArrayOfVec2Inner {
	return v.value
}

func (v *NullableArrayOfVec2Inner) Set(val *ArrayOfVec2Inner) {
	v.value = val
	v.isSet = true
}

func (v NullableArrayOfVec2Inner) IsSet() bool {
	return v.isSet
}

func (v *NullableArrayOfVec2Inner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArrayOfVec2Inner(val *ArrayOfVec2Inner) *NullableArrayOfVec2Inner {
	return &NullableArrayOfVec2Inner{value: val, isSet: true}
}

func (v NullableArrayOfVec2Inner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArrayOfVec2Inner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


