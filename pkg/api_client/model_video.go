/*
Djangolang

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_client

import (
	"encoding/json"
	"time"
)

// checks if the Video type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Video{}

// Video struct for Video
type Video struct {
	CameraId *string `json:"camera_id,omitempty"`
	CameraIdObject *Camera `json:"camera_id_object,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	DetectionSummary interface{} `json:"detection_summary,omitempty"`
	Duration *int64 `json:"duration,omitempty"`
	EndedAt *time.Time `json:"ended_at,omitempty"`
	FileName *string `json:"file_name,omitempty"`
	FileSize *float64 `json:"file_size,omitempty"`
	Id *string `json:"id,omitempty"`
	ObjectDetectorClaimedUntil *time.Time `json:"object_detector_claimed_until,omitempty"`
	ObjectTrackerClaimedUntil *time.Time `json:"object_tracker_claimed_until,omitempty"`
	ReferencedByDetectionVideoIdObjects []Detection `json:"referenced_by_detection_video_id_objects,omitempty"`
	StartedAt *time.Time `json:"started_at,omitempty"`
	Status *string `json:"status,omitempty"`
	ThumbnailName *string `json:"thumbnail_name,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewVideo instantiates a new Video object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideo() *Video {
	this := Video{}
	return &this
}

// NewVideoWithDefaults instantiates a new Video object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoWithDefaults() *Video {
	this := Video{}
	return &this
}

// GetCameraId returns the CameraId field value if set, zero value otherwise.
func (o *Video) GetCameraId() string {
	if o == nil || IsNil(o.CameraId) {
		var ret string
		return ret
	}
	return *o.CameraId
}

// GetCameraIdOk returns a tuple with the CameraId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetCameraIdOk() (*string, bool) {
	if o == nil || IsNil(o.CameraId) {
		return nil, false
	}
	return o.CameraId, true
}

// HasCameraId returns a boolean if a field has been set.
func (o *Video) HasCameraId() bool {
	if o != nil && !IsNil(o.CameraId) {
		return true
	}

	return false
}

// SetCameraId gets a reference to the given string and assigns it to the CameraId field.
func (o *Video) SetCameraId(v string) {
	o.CameraId = &v
}

// GetCameraIdObject returns the CameraIdObject field value if set, zero value otherwise.
func (o *Video) GetCameraIdObject() Camera {
	if o == nil || IsNil(o.CameraIdObject) {
		var ret Camera
		return ret
	}
	return *o.CameraIdObject
}

// GetCameraIdObjectOk returns a tuple with the CameraIdObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetCameraIdObjectOk() (*Camera, bool) {
	if o == nil || IsNil(o.CameraIdObject) {
		return nil, false
	}
	return o.CameraIdObject, true
}

// HasCameraIdObject returns a boolean if a field has been set.
func (o *Video) HasCameraIdObject() bool {
	if o != nil && !IsNil(o.CameraIdObject) {
		return true
	}

	return false
}

// SetCameraIdObject gets a reference to the given Camera and assigns it to the CameraIdObject field.
func (o *Video) SetCameraIdObject(v Camera) {
	o.CameraIdObject = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Video) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Video) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Video) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *Video) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *Video) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *Video) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetDetectionSummary returns the DetectionSummary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Video) GetDetectionSummary() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.DetectionSummary
}

// GetDetectionSummaryOk returns a tuple with the DetectionSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetDetectionSummaryOk() (*interface{}, bool) {
	if o == nil || IsNil(o.DetectionSummary) {
		return nil, false
	}
	return &o.DetectionSummary, true
}

// HasDetectionSummary returns a boolean if a field has been set.
func (o *Video) HasDetectionSummary() bool {
	if o != nil && !IsNil(o.DetectionSummary) {
		return true
	}

	return false
}

// SetDetectionSummary gets a reference to the given interface{} and assigns it to the DetectionSummary field.
func (o *Video) SetDetectionSummary(v interface{}) {
	o.DetectionSummary = v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *Video) GetDuration() int64 {
	if o == nil || IsNil(o.Duration) {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *Video) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *Video) SetDuration(v int64) {
	o.Duration = &v
}

// GetEndedAt returns the EndedAt field value if set, zero value otherwise.
func (o *Video) GetEndedAt() time.Time {
	if o == nil || IsNil(o.EndedAt) {
		var ret time.Time
		return ret
	}
	return *o.EndedAt
}

// GetEndedAtOk returns a tuple with the EndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetEndedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndedAt) {
		return nil, false
	}
	return o.EndedAt, true
}

// HasEndedAt returns a boolean if a field has been set.
func (o *Video) HasEndedAt() bool {
	if o != nil && !IsNil(o.EndedAt) {
		return true
	}

	return false
}

// SetEndedAt gets a reference to the given time.Time and assigns it to the EndedAt field.
func (o *Video) SetEndedAt(v time.Time) {
	o.EndedAt = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *Video) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *Video) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *Video) SetFileName(v string) {
	o.FileName = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *Video) GetFileSize() float64 {
	if o == nil || IsNil(o.FileSize) {
		var ret float64
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetFileSizeOk() (*float64, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *Video) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given float64 and assigns it to the FileSize field.
func (o *Video) SetFileSize(v float64) {
	o.FileSize = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Video) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Video) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Video) SetId(v string) {
	o.Id = &v
}

// GetObjectDetectorClaimedUntil returns the ObjectDetectorClaimedUntil field value if set, zero value otherwise.
func (o *Video) GetObjectDetectorClaimedUntil() time.Time {
	if o == nil || IsNil(o.ObjectDetectorClaimedUntil) {
		var ret time.Time
		return ret
	}
	return *o.ObjectDetectorClaimedUntil
}

// GetObjectDetectorClaimedUntilOk returns a tuple with the ObjectDetectorClaimedUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetObjectDetectorClaimedUntilOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ObjectDetectorClaimedUntil) {
		return nil, false
	}
	return o.ObjectDetectorClaimedUntil, true
}

// HasObjectDetectorClaimedUntil returns a boolean if a field has been set.
func (o *Video) HasObjectDetectorClaimedUntil() bool {
	if o != nil && !IsNil(o.ObjectDetectorClaimedUntil) {
		return true
	}

	return false
}

// SetObjectDetectorClaimedUntil gets a reference to the given time.Time and assigns it to the ObjectDetectorClaimedUntil field.
func (o *Video) SetObjectDetectorClaimedUntil(v time.Time) {
	o.ObjectDetectorClaimedUntil = &v
}

// GetObjectTrackerClaimedUntil returns the ObjectTrackerClaimedUntil field value if set, zero value otherwise.
func (o *Video) GetObjectTrackerClaimedUntil() time.Time {
	if o == nil || IsNil(o.ObjectTrackerClaimedUntil) {
		var ret time.Time
		return ret
	}
	return *o.ObjectTrackerClaimedUntil
}

// GetObjectTrackerClaimedUntilOk returns a tuple with the ObjectTrackerClaimedUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetObjectTrackerClaimedUntilOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ObjectTrackerClaimedUntil) {
		return nil, false
	}
	return o.ObjectTrackerClaimedUntil, true
}

// HasObjectTrackerClaimedUntil returns a boolean if a field has been set.
func (o *Video) HasObjectTrackerClaimedUntil() bool {
	if o != nil && !IsNil(o.ObjectTrackerClaimedUntil) {
		return true
	}

	return false
}

// SetObjectTrackerClaimedUntil gets a reference to the given time.Time and assigns it to the ObjectTrackerClaimedUntil field.
func (o *Video) SetObjectTrackerClaimedUntil(v time.Time) {
	o.ObjectTrackerClaimedUntil = &v
}

// GetReferencedByDetectionVideoIdObjects returns the ReferencedByDetectionVideoIdObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Video) GetReferencedByDetectionVideoIdObjects() []Detection {
	if o == nil {
		var ret []Detection
		return ret
	}
	return o.ReferencedByDetectionVideoIdObjects
}

// GetReferencedByDetectionVideoIdObjectsOk returns a tuple with the ReferencedByDetectionVideoIdObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetReferencedByDetectionVideoIdObjectsOk() ([]Detection, bool) {
	if o == nil || IsNil(o.ReferencedByDetectionVideoIdObjects) {
		return nil, false
	}
	return o.ReferencedByDetectionVideoIdObjects, true
}

// HasReferencedByDetectionVideoIdObjects returns a boolean if a field has been set.
func (o *Video) HasReferencedByDetectionVideoIdObjects() bool {
	if o != nil && !IsNil(o.ReferencedByDetectionVideoIdObjects) {
		return true
	}

	return false
}

// SetReferencedByDetectionVideoIdObjects gets a reference to the given []Detection and assigns it to the ReferencedByDetectionVideoIdObjects field.
func (o *Video) SetReferencedByDetectionVideoIdObjects(v []Detection) {
	o.ReferencedByDetectionVideoIdObjects = v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *Video) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *Video) HasStartedAt() bool {
	if o != nil && !IsNil(o.StartedAt) {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *Video) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Video) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Video) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Video) SetStatus(v string) {
	o.Status = &v
}

// GetThumbnailName returns the ThumbnailName field value if set, zero value otherwise.
func (o *Video) GetThumbnailName() string {
	if o == nil || IsNil(o.ThumbnailName) {
		var ret string
		return ret
	}
	return *o.ThumbnailName
}

// GetThumbnailNameOk returns a tuple with the ThumbnailName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetThumbnailNameOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailName) {
		return nil, false
	}
	return o.ThumbnailName, true
}

// HasThumbnailName returns a boolean if a field has been set.
func (o *Video) HasThumbnailName() bool {
	if o != nil && !IsNil(o.ThumbnailName) {
		return true
	}

	return false
}

// SetThumbnailName gets a reference to the given string and assigns it to the ThumbnailName field.
func (o *Video) SetThumbnailName(v string) {
	o.ThumbnailName = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Video) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Video) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Video) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o Video) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Video) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CameraId) {
		toSerialize["camera_id"] = o.CameraId
	}
	if !IsNil(o.CameraIdObject) {
		toSerialize["camera_id_object"] = o.CameraIdObject
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if o.DetectionSummary != nil {
		toSerialize["detection_summary"] = o.DetectionSummary
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.EndedAt) {
		toSerialize["ended_at"] = o.EndedAt
	}
	if !IsNil(o.FileName) {
		toSerialize["file_name"] = o.FileName
	}
	if !IsNil(o.FileSize) {
		toSerialize["file_size"] = o.FileSize
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ObjectDetectorClaimedUntil) {
		toSerialize["object_detector_claimed_until"] = o.ObjectDetectorClaimedUntil
	}
	if !IsNil(o.ObjectTrackerClaimedUntil) {
		toSerialize["object_tracker_claimed_until"] = o.ObjectTrackerClaimedUntil
	}
	if o.ReferencedByDetectionVideoIdObjects != nil {
		toSerialize["referenced_by_detection_video_id_objects"] = o.ReferencedByDetectionVideoIdObjects
	}
	if !IsNil(o.StartedAt) {
		toSerialize["started_at"] = o.StartedAt
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ThumbnailName) {
		toSerialize["thumbnail_name"] = o.ThumbnailName
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableVideo struct {
	value *Video
	isSet bool
}

func (v NullableVideo) Get() *Video {
	return v.value
}

func (v *NullableVideo) Set(val *Video) {
	v.value = val
	v.isSet = true
}

func (v NullableVideo) IsSet() bool {
	return v.isSet
}

func (v *NullableVideo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideo(val *Video) *NullableVideo {
	return &NullableVideo{value: val, isSet: true}
}

func (v NullableVideo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


